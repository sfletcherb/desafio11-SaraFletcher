openapi: 3.0.1
info:
  title: Products API
  description: E-commerce
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local server

paths:
  /api/products/:
    get:
      summary: Get all products
      tags:
        - Products API
      description: Returns a list of all products with an option to limit the number of results
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            example: 10
          description: Limit the number of products returned
      responses:
        "200":
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Failed to connect to the database"

    post:
      summary: Add a new product
      tags:
        - Products API
      description: Adds a new product to the database
      requestBody:
        description: Product to be added
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductInput"
      responses:
        "200":
          description: Product added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Product added successfully
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Failed to add product"

  /api/products/{pid}:
    get:
      summary: Get a product by ID
      tags:
        - Products API
      description: Returns a single product by its ID
      parameters:
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: The ID of the product to retrieve
      responses:
        "200":
          description: A single product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Product not found"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Failed to connect to the database"

    put:
      summary: Update a product
      tags:
        - Products API
      description: Updates an existing product by its ID
      parameters:
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: The ID of the product to update
      requestBody:
        description: New changes to be applied to the product
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductUpdate"
      responses:
        "200":
          description: Product updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Product updated successfully
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "ID cannot be updated"
        "404":
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Product not found"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Failed to update product"

    delete:
      summary: Delete a product
      tags:
        - Products API
      description: Deletes an existing product by its ID
      parameters:
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: The ID of the product to delete
      responses:
        "200":
          description: Product deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Product deleted successfully
        "404":
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Product not found"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Failed to delete product"

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        price:
          type: number
        img:
          type: string
        code:
          type: string
        stock:
          type: number
        category:
          type: string
        status:
          type: boolean
        thumbnail:
          type: array
          items:
            type: string
        owner:
          type: string
    ProductInput:
      type: object
      properties:
        title:
          type: string
          example: Sample Product
        description:
          type: string
          example: This is a sample product
        price:
          type: number
          example: 19.99
        img:
          type: string
          example: http://example.com/img.jpg
        code:
          type: string
          example: PROD001
        stock:
          type: number
          example: 100
        category:
          type: string
          example: Category1
        status:
          type: boolean
          example: true
        thumbnail:
          type: array
          items:
            type: string
          example:
            ["http://example.com/thumb1.jpg", "http://example.com/thumb2.jpg"]
        owner:
          type: string
          example: admin
    ProductUpdate:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        price:
          type: number
        img:
          type: string
        code:
          type: string
        stock:
          type: number
        category:
          type: string
        status:
          type: boolean
        thumbnail:
          type: array
          items:
            type: string
        owner:
          type: string
